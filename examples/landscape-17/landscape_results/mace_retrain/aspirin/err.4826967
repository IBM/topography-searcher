/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/e3nn/o3/_wigner.py:10: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  _Jd, _W3j_flat, _W3j_indices = torch.load(os.path.join(os.path.dirname(__file__), 'constants.pt'))
/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/mace/calculators/mace.py:128: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  torch.load(f=model_path, map_location=device)
Traceback (most recent call last):
  File "/dccstor/aimft1/landscape_paper/mace_retrain/aspirin/../../run_mace_ase_asp.py", line 93, in <module>
    explorer.get_minima(coords=coords,
  File "/u/jdm/programs/topography-searcher/src/topsearch/sampling/exploration.py", line 85, in get_minima
    invalid_min = get_invalid_minima(self.ktn,
  File "/u/jdm/programs/topography-searcher/src/topsearch/analysis/minima_properties.py", line 18, in get_invalid_minima
    if not potential.check_valid_minimum(coords):
  File "/u/jdm/programs/topography-searcher/src/topsearch/potentials/potential.py", line 81, in check_valid_minimum
    hess = self.hessian(coords.position)
  File "/u/jdm/programs/topography-searcher/src/topsearch/potentials/potential.py", line 68, in hessian
    grad_minus = self.gradient(position)
  File "/u/jdm/programs/topography-searcher/src/topsearch/potentials/ml_potentials.py", line 131, in gradient
    forces = self.atoms.get_forces().flatten()
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/ase/atoms.py", line 812, in get_forces
    forces = self._calc.get_forces(self)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/ase/calculators/abc.py", line 30, in get_forces
    return self.get_property('forces', atoms)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/ase/calculators/calculator.py", line 538, in get_property
    self.calculate(atoms, [name], system_changes)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/mace/calculators/mace.py", line 244, in calculate
    out = model(
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/mace/modules/models.py", line 373, in forward
    node_feats = product(
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/mace/modules/blocks.py", line 226, in forward
    node_feats = self.symmetric_contractions(node_feats, node_attrs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/mace/modules/symmetric_contraction.py", line 82, in forward
    outs = [contraction(x, y) for contraction in self.contractions]
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/mace/modules/symmetric_contraction.py", line 82, in <listcomp>
    outs = [contraction(x, y) for contraction in self.contractions]
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/mace/modules/symmetric_contraction.py", line 228, in forward
    out = contract_features(c_tensor, x)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/fx/graph_module.py", line 738, in call_wrapped
    return self._wrapped_call(self, *args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/fx/graph_module.py", line 303, in __call__
    return super(self.cls, obj).__call__(*args, **kwargs)  # type: ignore[misc]
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "<eval_with_key>.15 from <eval_with_key>.14:10 in forward", line 5, in forward
  File "/dccstor/aimft1/miniforge3/envs/mace/lib/python3.9/site-packages/torch/functional.py", line 386, in einsum
    return _VF.einsum(equation, operands)  # type: ignore[attr-defined]
KeyboardInterrupt
